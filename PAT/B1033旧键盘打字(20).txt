旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及坏掉的那些键，打出的结果文

字会是怎样？

输入描述:
输入在2行中分别给出坏掉的那些键、以及应该输入的文字。其中对应英文字母的坏键以大写给出；每段文字是不超过10^5个字符的串。可用的

字符包括字母[a-z, A-Z]、数字0-9、以及下划线“_”（代表空格）、“,”、“.”、“-”、“+”（代表上档键）。题目保证第2行输入的文字串非空。



注意：如果上档键坏掉了，那么大写的英文字母无法被打出。


输出描述:
在一行中输出能够被打出的结果文字。如果没有一个字符能被打出，则输出空行。

输入例子:
7+IE.
7_This_is_a_test.

输出例子:
_hs_s_a_tst

time 30m
注意：题目保证的是第二行非空，第一行就可能为空，用scanf就不对

#include<cstdio>
#include<cstring>
const int maxn = 100010;
char str1[maxn];
bool broken[256] ;
int main()
{
	memset(broken, true, sizeof(broken));
	int len1;
	gets(str1);
	len1 = strlen(str1);
	for (int i = 0; i < len1; i++){
		if (str1[i] >= 'A'&&str1[i] <= 'Z')
			str1[i] =(str1[i] - 'A')+'a';
		broken[str1[i]] = false;
	}
	gets(str1);
	len1 = strlen(str1);
	for (int i = 0; i < len1; i++){
		if (str1[i] >= 'A'&&str1[i] <= 'Z')
		{
			int low = str1[i] - 'A' + 'a';
			if (broken[low] == true && broken['+'] == true)
				printf("%c", str1[i]);
		}
		else if(broken[str1[i]] == true){
			printf("%c", str1[i]);
		}
	}
	printf("\n");
	return 0;
}