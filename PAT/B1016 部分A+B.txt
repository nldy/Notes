题目描述
正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。
 
 现给定A、DA、B、DB，请编写程序计算PA + PB。

输入描述:
输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 < A, B < 1010。


输出描述:
在一行中输出PA + PB的值。

输入例子:
3862767 6 13530293 3

输出例子:
399

3862767 1 13530293 8


#include<cstdio>
long long toform(long long x,int d){	//把所有DA提取出来形成新的数
	int i = 1;
	long long sum = 0;
	while (x != 0){
		if (x%10 == d){
			sum += x % 10 * i;
			i = i * 10;
		}
		x = x / 10;
	}
	return sum;
}
int main(){
	long long a, b;
	int da, db;
	scanf("%lld%d%lld%d", &a,&da,&b,&db);
	long long pa = 0, pb = 0;
	pa = toform(a,da);
	pb = toform(b,db);
	printf("%lld\n", pa + pb);
	return 0;
}


//学习代码
#include <stdio.h>
  
int main(){
//  正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。
  
//现给定A、DA、B、DB，请编写程序计算PA + PB。
  
    //输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 < A, B < 1010。   
    long long a,da,b,db,pa=0,pb=0,na,nb;
    scanf("%lld %lld %lld %lld",&a,&da,&b,&db);
    //找出pa pb
  
    while(a){
        na=a%10;     
        if(na==da){     
            pa=10*pa+da;
        }
        a/=10;
         
    }
    while(b){
        nb=b%10;
        if(nb==db){
              
            pb=10*pb+db;
        }
        b/=10;
         
    }
      
    //在一行中输出PA + PB的值。
    printf("%lld",pa+pb); //!!!!!无法输出
          
    return 0;
}