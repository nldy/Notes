请编写程序，找出一段给定文字中出现最频繁的那个英文字母。

输入格式：

输入在一行中给出一个长度不超过1000的字符串。字符串由ASCII码表中任意可见字符及空格组成，至少包含1个英文字母，以回车结束（回车不算在内）。

输出格式：

在一行中输出出现频率最高的那个英文字母及其出现次数，其间以空格分隔。如果有并列，则输出按字母序最小的那个字母。统计时不区分大小写，输出小写字母。

输入样例：
This is a simple TEST.  There ARE numbers and other symbols 1&2&3...........
输出样例：
e 7

time 20m
思路：排序

#include<cstdio>
#include<string.h>
#include<algorithm>
using namespace std;
const int maxn = 1010;
char str[maxn];
struct alph{
	int order;
	int times = 0;
}al[30];
bool cmp(alph a, alph b){
	if (a.times != b.times) return a.times > b.times;
	else
		return a.order < b.order;
}
int main(){
	gets(str);
	int len = strlen(str);
	for (int i = 0; i < 30; i++)
		al[i].order = i;
	for (int i = 0; i < len; i++){
		if (str[i] >= 'a'&&str[i] <= 'z')
			al[str[i] - 'a'].times ++;
		else if (str[i] >= 'A'&&str[i] <= 'Z'){
			al[str[i] - 'A'].times++;
		}
	}
	sort(al, al + 30, cmp);
	printf("%c %d", al[0].order + 'a',al[0].times);
	return 0;
}