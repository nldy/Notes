本题要求计算A/B，其中A是不超过1000位的正整数，B是1位正整数。你需要输出商数Q和余数R，使得A = B * Q + R成立。

输入描述:
输入在1行中依次给出A和B，中间以1空格分隔。


输出描述:
在1行中依次输出Q和R，中间以1空格分隔。

输入例子:
123456789050987654321 7

输出例子:
17636684150141093474 3

time 17m
思路：使用大数模版


#include<cstdio>
#include<string.h>
const int maxn = 1010;
int r=0;
char str[maxn];
struct bign{
	int d[1010];
	int len;
	bign(){
		memset(d, 0, sizeof(d));
		len = 0;
	}
};
bign change(char str[]){
	bign a;
	a.len = strlen(str);
	for (int i = 0; i < a.len; i++){
		a.d[i] = str[a.len - 1-i]-'0';
	}
	return a;
}
bign divide(bign a, int b){
	bign c;
	c.len = a.len;
	for (int i = a.len - 1; i >= 0; i--){
		r = r * 10 + a.d[i];
		if (r < b)c.d[i] = 0;
		else{
			c.d[i] = r / b;
			r = r%b;
		}
	}
	while (c.len - 1 >= 1 && c.d[c.len - 1] == 0)
		c.len--;
	return c;
}
int main(){
	int a,b;
	scanf("%s%d", &str, &b);
	bign num, q;
	num=change(str);
	q = divide(num, b);
	for (int i = q.len - 1; i >= 0; i--){
		printf("%d", q.d[i]);
	}
	printf(" %d", r);
	return 0;
}