This time, you are supposed to find A*B where A and B are two polynomials.

Input Specification:

Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 ... NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, ..., K) are the exponents and coefficients, respectively. It is given that 1 <= K <= 10, 0 <= NK < ... < N2 < N1 <=1000.

Output Specification:

For each test case you should output the product（乘积） of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate up to 1 decimal place.

Sample Input
2 1 2.4 0 3.2
2 2 1.5 1 0.5
Sample Output
3 3 3.6 2 6.0 1 1.6

注：存多项式数组必须开到2001
思路：存第一个多项式，第二个边读边处理

#include<cstdio>
const int maxn = 2010;
int main()
{
	double poly[maxn] = { 0 };
	double polya[maxn / 2] = { 0 };
	int n1,n2, e;
	double k;
	int count = 0, end=0;
	scanf("%d", &n1);
	for(int j=0;j<n1;j++){
		scanf("%d %lf", &e, &k);
		polya[end++] = e;
		polya[end++] = k;
	}
	scanf("%d", &n2);
	while (n2--){
		scanf("%d %lf", &e, &k);
		int i = 0;
		for (int j = 0; j < n1; j++){
			double tempk;
			int tempe;
			tempe = (int)polya[i++] + e;
			tempk= polya[i++] * k;
			poly[tempe] += tempk;
		}
	}
	for (int i = 0; i < maxn; i++)
		if (poly[i] != 0)
			count++;
	printf("%d", count);
	for (int i = maxn-1; i >= 0; i--)
	{
		if (poly[i] != 0){
			printf(" %d %.1f", i,poly[i]);
		}
	}
	return 0;
}