如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。例如123和51就是朋友数，因为1+2+3 = 5+1 = 6，而6就是它们的朋友证号。给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。注意：我们默认一个整数自己是自己的朋友。

输入格式：

输入第一行给出正整数N。随后一行给出N个正整数，数字间以空格分隔。题目保证所有数字小于104。

输出格式：

首先第一行输出给定数字中不同的朋友证号的个数；随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。

输入样例：
8
123 899 51 998 27 33 36 12
输出样例：
4
3 6 9 26


思路：每个数最大为10的4次方意味着朋友证号最大是4个9相加，就可以用数组储存每个出现的朋友证号


#include<cstdio>
#include<algorithm>
using namespace std;
const int maxn = 110;
int cot = 0;
bool fid[maxn] = { false };
int main()
{
	int  n;
	scanf("%d", &n);
	for (int i = 1; i <= n; i++){
		int num;
		int ad = 0;
		scanf("%d", &num);
		do{
			int k = num % 10;
			ad += k;
			num = num / 10;
		} while (num != 0);
		if (fid[ad] == false){
			fid[ad] = true;
			cot++;
		}
	}
	printf("%d\n", cot);
	int i = 0;
	bool flag = false;
	while (cot > 0){
		if (fid[i] == true){
			if (flag == true)
				printf(" ");
			flag = true;
			printf("%d", i);
			cot--;
		}
		i++;
	}
	return 0;
}