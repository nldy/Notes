如果你是哈利・波特迷，你会知道魔法世界有它自己的货币系统 ―― 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二

十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱P和他实付的钱A，你的任务是写一个程序来计算他应该被找的零钱。

输入描述:
输入在1行中分别给出P和A，格式为“Galleon.Sickle.Knut”，其间用1个空格分隔。这里Galleon是[0, 107]]区间内的整数，Sickle是[0, 

17)区间内的整数，Knut是[0, 29)区间内的整数。


输出描述:
在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。

输入例子:
10.16.27 14.1.28

输出例子:
3.2.1


注意：转化成相应格式

#include<cstdio>
int g = 29 * 17;
int s = 29;
int main()
{
	int ned[3],have[3];
	int mon1, mon2,mon;
	scanf("%d.%d.%d", &ned[0],&ned[1],&ned[2]);
	scanf("%d.%d.%d", &have[0],&have[1],&have[2]);
	mon1 = ned[0] * g + ned[1]* s + ned[2];
	mon2 = have[0] * g + have[1] * s + have[2];
	
	if (mon1 <= mon2){
		mon = mon2 - mon1;
		printf("%d.%d.%d", mon/g, mon%g/s,mon%s);
	}
	else
	{
		mon = mon1 - mon2;
		printf("-%d.%d.%d", mon / g, mon%g / s, mon%s);
	}
	return 0;
}