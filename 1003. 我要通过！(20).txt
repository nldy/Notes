“答案正确”是自动判题系统给出的最令人欢喜的回复。本题属于PAT的“答案正确”大派送 ―― 只要读入的字符串满足下列条件，系统就输出“答案正确”，否则输出“答案错误”。

得到“答案正确”的条件是：

1. 字符串中必须仅有P, A, T这三种字符，不可以包含其它字符；
2. 任意形如 xPATx 的字符串都可以获得“答案正确”，其中 x 或者是空字符串，或者是仅由字母 A 组成的字符串；
3. 如果 aPbTc 是正确的，那么 aPbATca 也是正确的，其中 a, b, c 均或者是空字符串，或者是仅由字母 A 组成的字符串。

现在就请你为PAT写一个自动裁判程序，判定哪些字符串是可以获得“答案正确”的。
输入格式： 每个测试输入包含1个测试用例。第1行给出一个自然数n (<10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过100，且不包含空格。

输出格式：每个字符串的检测结果占一行，如果该字符串可以获得“答案正确”，则输出YES，否则输出NO。

输入样例：
8
PAT
PAAT
AAPATAA
AAPAATAAAA
xPATx
PT
Whatever
APAAATAA
输出样例：
YES
YES
YES
YES
NO
NO
NO
NO

time 18m
思路：一开始中间部分肯定是“PAT”，中间每增加一个‘A’，右端增加a，也就等价于：a*b=c，均指字符串a，b，c中‘A’的个数
分3种情况，P的左边，PT的中间，T的右边计算A的个数，最后是a*b=c

#include<cstdio>
#include<string.h>
#include<algorithm>
using namespace std;
const int maxn = 105;
char str[10][maxn];

int main(){
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++){
		scanf("%s", &str[i]);
		int len = strlen(str[i]);
		int a=0, b=0, c=0,k=1;
		for (int j = 0; j < len; j++){
			if (k == 1){
				if (str[i][j] == 'A')
				{
					a++;
				}
				else if (str[i][j] == 'P'){
					k = 2;
				}
				else{
					k = 0;
					break;
				}
			}
			else if (k == 2){
				if (str[i][j] == 'A'){
					b++;
				}
				else if (str[i][j] == 'T'&&b>0)
					k = 3;
				else
				{
					k = 0;
					break;
				}
			}
			else if (k == 3){
				if (str[i][j] == 'A'){
					c++;
				}
				else
				{
					k = 0;
					break;
				}
			}
		}
		if (b*a == c&&k==3)
			printf("YES\n");
		else
			printf("NO\n");
	}

	return 0;
}
