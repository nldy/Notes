给定一个长度不超过10000的、仅由英文字母构成的字符串。请将字符重新调整顺序，按“PATestPATest....”这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按PATest的顺序打印，直到所有字符都被输出。

输入格式：

输入在一行中给出一个长度不超过10000的、仅由英文字母构成的非空字符串。

输出格式：

在一行中按题目要求输出排序后的字符串。题目保证输出非空。

输入样例：
redlesPayBestPATTopTeePHPereatitAPPT
输出样例：
PATestPATestPTetPTePePee

time 20m

思路：储存个数按顺序输出

#include<cstdio>
#include<string.h>
//#include<algorithm>
using namespace std;
const int maxn = 100010;
char str[maxn];
struct alph{
	char ch;
	int ge;
}al[6];
void init(){
	al[0].ch = 'P';
	al[1].ch = 'A';
	al[2].ch = 'T';
	al[3].ch = 'e';
	al[4].ch = 's';
	al[5].ch = 't';
}
int main(){
	init();
	scanf("%s", str);
	int len = strlen(str);
	for (int i = 0; i < len; i++){
		if (str[i] == 'P')
			al[0].ge++;
		if (str[i] == 'A')
			al[1].ge++;
		if (str[i] == 'T')
			al[2].ge++;
		if (str[i] == 'e')
			al[3].ge++;
		if (str[i] == 's')
			al[4].ge++;
		if (str[i] == 't')
			al[5].ge++;
	}
	int n = 0;
	for (int i = 0; i < 6; i++)
		n+=al[i].ge;
	while (n != 0){
		for (int i = 0; i < 6; i++){
			if (al[i].ge > 0){
				printf("%c", al[i].ch);
				al[i].ge--;
				n--;
			}
		}
	}
	return 0;
}