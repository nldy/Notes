题目描述
大家应该都会玩“锤子剪刀布”的游戏：

现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。

输入描述:
输入第1行给出正整数N（<=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代

表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。


输出描述:
输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯

一，则输出按字母序最小的解。

输入例子:
10
C J
J B
C B
B B
B C
C C
C B
J B
B C
J J

输出例子:
5 3 2

2 3 5

B B

思路：想用循环相克，但没想出来，我就直接我排序了
B,C,J对应0、1、2，做一个map数组，
将输入的转换成数字K1,K2,K1胜的条件是(k1+1)%3,平k1==k2，负(k2+1)%3==k1

#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
struct Show{
	char hand[2];
	int times;
}sh[10] = { { 'C', 0 }, { 'J', 0 }, { 'B', 0 }, { 'C', 0 }, { 'J', 0 }, { 'B', 0 } };
bool cmp(Show a, Show b){
	if (a.times != b.times)
		return a.times > b.times;
	else
		return strcmp(a.hand ,b.hand) < 0;
}
void add(char ch,int move){
	if (ch == 'C'){
		sh[0 + move].times++;
	}
	else if (ch == 'J')
		sh[1 + move].times++;
	else
		sh[2 + move].times++;
}
int main(){
	int n;
	int win=0, peace=0, loss=0;
	scanf("%d", &n);
	while (n--){
		char handa[2], handb[2];
		scanf("%s%s", &handa,&handb);
		if (handa[0] == 'C'&&handb[0] == 'J' || handa[0] == 'B'&&handb[0] == 'C' || handa[0] == 'J'&&handb[0] == 'B'){
			add(handa[0], 0);
			win++;
		}
		else if (handa[0] == handb[0])
			peace++;
		else{
			add(handb[0], 3);
			loss++;
		}
	}
	sort(sh, sh + 3, cmp);
	sort(sh + 3, sh + 6, cmp);
	printf("%d %d %d\n%d %d %d\n", win, peace, loss, loss, peace, win);
	printf("%c %c\n",sh[0].hand[0],sh[3].hand[0]);
	return 0;
}